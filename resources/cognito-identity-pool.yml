Resources:
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: Rating${self:custom.stage}IdentityPool
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: [ "CognitoUserPool", "ProviderName" ]

  CognitoIdentityPoolRoles1:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: CognitoIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [ CognitoAuthRole, Arn ]
      RoleMappings:
        Type: Rules
        AmbiguousRoleResolution: Deny
        RulesConfiguration:
          Rules:
            - Claim: admin
              Value: "true"
              MatchType: Equals
              RoleARN:
                Fn::GetAtt: [ CognitoAuthRole, Arn ]

Outputs:
  IdentityPoolId:
    Value:
      Ref: CognitoIdentityPool
