Resources:
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: Rating${self:custom.stage}IdentityPool
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: [ CognitoUserPool, ProviderName ]

  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: CognitoIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [ CognitoAuthRole, Arn ]
      RoleMapping:
        AmbiguousRoleResolution: Deny
        Type: Rules
        RulesConfiguration:
          Rules:
          - Claim: custom:role
            MatchType: Equals
            Value: viewer
            RoleARN:
              Fn::GetAtt:
              - ViewerRole
              - Arn
          - Claim: custom:role
            MatchType: Equals
            Value: editor
            RoleARN:
              Fn::GetAtt:
              - EditorRole
              - Arn

Outputs:
  IdentityPoolId:
    Value:
      Ref: CognitoIdentityPool
